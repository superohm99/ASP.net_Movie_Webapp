@using Microsoft.AspNetCore.Identity;
@using ASP_Project.ViewModel;
@using ASP_Project.Models;
@model AddchatVM
@{
    ViewData["Title"] = "Chat Page";
    ViewData["Styles"] = "~/css/createRoom.css";
    ViewData["Scripts"] = "~/js/createRoom.js";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";


}


<div class="create-room-card">
    <div class="row d-flex align-items-center justify-content-center">
        <div class="col-md-3 card p-3">
            <h2 class="text-center text-info">Create Chat</h2>
            <form asp-action="Create" method="post" asp-route-returnurl="@ViewData["ReturnUrl"]">
            
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                
                
<div class="gallery-wrap">
    <div class="gallery">
        <div class="slides">
            @* Render images dynamically here *@
        </div>
    <div class="button-container">
        <button id="backBtn" type="button">&lt;</button>
        <button id="nextBtn" type="button">&gt;</button>
    </div>
    </div>
</div>
                    
                    
                    
                    @* <div class="showmovie"></div> *@
                    
                
                <div class="mb-1">
                    <label asp-for="Movie" class="control-label">Movie</label>
                    <select asp-for="Movie" id="movieSelect" class="form-control" >
                    @foreach (var i in (IEnumerable<MovieEntity>)ViewBag.movie)
                    {
                    <option value="@i.Id">@i.Title</option>
                    }
                    </select>
                    @* <label asp-for="Movie" class="control-label">Movie</label>
    <input  type="text" id="movieSelect" class="form-control"/> *@
                </div>

              


                 <div class="mb-1">
                    <label asp-for="Cinema" class="control-label">Cinema</label>
                    <select asp-for="Cinema" id="cinemaSelect" class="form-control" >
                    @* @foreach (var i in (IEnumerable<ProgramMovieEntity>)ViewBag.program)
                    {
                    <option value="@i.CinemaEntity.Id">@i.CinemaEntity.Enterprise</option>
                    } *@
                    <option>Please select a Movie</option>
                    </select>
                </div>

                <div class="mb-1">
                    <label asp-for="County" class="control-label">Province</label>
                    <select asp-for="County" id="countySelect" class="form-control" >
                    @* @foreach (var i in (IEnumerable<ProgramMovieEntity>)ViewBag.program)
                    {
                    <option value="@i.PlaceEntity.Id">@i.PlaceEntity.County</option>
                    } *@
                    <option>Please select a Cinema</option>
                    </select>
                </div>

                <div class="mb-1">
                    <label asp-for="Canton" class="control-label">Canton</label>
                    <select asp-for="Canton" id="cantonSelect" class="form-control" >
                    @* @foreach (var i in (IEnumerable<ProgramMovieEntity>)ViewBag.program)
                    {
                    <option value="@i.PlaceEntity.Id">@i.PlaceEntity.Canton</option>
                    } *@
                    <option>Please select a County</option>
                    </select>
                </div>

                <div class="mb-1">
                    <label asp-for="Showtime" class="control-label">Showtime</label>
                    <select asp-for="Showtime" id="showtimeSelect" class="form-control" >
                    <option>Please select a Canton</option>
                    </select>
                </div>

    

                <div class="mb-1">
                <label for="numberSelect">เลือกตัวเลข:</label>
                <select id="numberSelect" asp-for="MaxNumber">
                    <option value="">โปรดเลือก</option>
                </select>
                </div>


                    <div class="col-4">
                        <input type="submit" value="Create Chat" class="btn btn-primary btn-sm float-end" />
                    </div>
            </form>
        </div>
    </div>

</div>


@section Scripts {
    <script>

        const selectElement = document.getElementById('numberSelect');

    // สร้างตัวเลือกตั้งแต่ 2 ถึง 10
        for (let i = 2; i <= 10; i++) {
        // สร้างอ็อปชัน
        const option = document.createElement('option');
        // กำหนดค่าและข้อความ
        option.value = i;
        option.text = i;
        // เพิ่มอ็อปชันเข้าไปในเลือก
        selectElement.appendChild(option);
        }


        $(document).ready(function() {
    var movieid = $('#movieSelect').val();
    loadCinemaData(movieid);


    $('#movieSelect').change(function() {
        var movieid = $(this).val();
        loadCinemaData(movieid);
    });

  
    $('#cinemaSelect').change(function() {
        var cinemaid = $(this).val();
        var movieid = $('#movieSelect').val();
        loadPlaceData(cinemaid, movieid);
    });

    $('#countySelect').change(function() {
        var countyid = $(this).val();
        var cinemaid = $('#cinemaSelect').val();
        var movieid = $('#movieSelect').val();
        loadCantonData(movieid,cinemaid,countyid);
        
    })

    $('#cantonSelect').change(function() {
        var movieid = $('#movieSelect').val();
        var cinemaid = $('#cinemaSelect').val();
        var placeid = $(this).val()
        console.log("555555");
        loadShowtimeData(movieid, cinemaid, placeid);
    })
    });

function loadCinemaData(movieid) {
    $.ajax({
        url: '@Url.Action("Loadmovie", "Chat")',
        type: 'GET',
        data: { movieId: movieid },
        success: function(response) {
            var cinemaSelect = $('#cinemaSelect');
            cinemaSelect.empty();
            $.each(response, function(index, item) {
                cinemaSelect.append($('<option>').val(item.enterprise_result.id).text(item.enterprise_result.enterprise));
            });
            
            var cinemaid = cinemaSelect.val();
            var movieid = $('#movieSelect').val();
            loadPlaceData(cinemaid,movieid);
        },
        error: function(xhr, status, error) {
            console.error(xhr.responseText);
        }
    });
}

function loadPlaceData(cinemaid,movieid) {
    $.ajax({
        url: '@Url.Action("Loadcinema", "Chat")',
        type: 'GET',
        data: { cinemaId: cinemaid ,movieId:movieid},
        success: function(response) {
            var countySelect = $('#countySelect');
            countySelect.empty();
            $.each(response, function(index, item) {
                countySelect.append($('<option>').val(item.place_result.county).text(item.place_result.county));
            });
            var movieid = $('#movieSelect').val();
            var cinemaid = $('#cinemaSelect').val();
            var placeid = $('#countySelect').val()
            console.log("77777");
            loadCantonData(movieid,cinemaid,placeid);
        },
        error: function(xhr, status, error) {
            console.error(xhr.responseText);
        }
    });
}

function loadCantonData(movieid,cinemaid,placeid) {
    $.ajax({
        url: '@Url.Action("Loadcanton", "Chat")',
        type: 'GET',
        data: { movieId:movieid,cinemaId:cinemaid,placestr: placeid},
        success: function(response) {
            var cantonSelect = $('#cantonSelect');
            cantonSelect.empty();
            $.each(response, function(index, item) {
                cantonSelect.append($('<option>').val(item.place_result.id).text(item.place_result.canton));
            });
            console.log("9999999");
            var movieid = $('#movieSelect').val();
            var cinemaid = $('#cinemaSelect').val();
            var placeid = $('#cantonSelect').val()
            loadShowtimeData(movieid, cinemaid, placeid);
        
        },
       
        error: function(xhr, status, error) {
            console.error(xhr.responseText);
        }
    });
}

function loadShowtimeData(movieid, cinemaid, placeid) {
    $.ajax({
        url: '@Url.Action("Loadshowtime", "Chat")',
        type: 'GET',
        data: { movieId:movieid,cinemaId:cinemaid,placeId: placeid},
        success: function(response) {
            var showtimeSelect = $('#showtimeSelect');
            showtimeSelect.empty();
            $.each(response, function(index, item) {
                showtimeSelect.append($('<option>').val(item.id).text(item.showtime));
            });
        },

        
        error: function(xhr, status, error) {
            console.error(xhr.responseText);
        }
    });
} 


@* 
const mainContainer = document.querySelector('.showmovie');

const createImage = (src, id) => {
        
        const img = document.createElement('img');
        img.src = src;
        img.setAttribute('data-id', id); // Set data-id attribute with the movie ID
       // img.setAttribute('data-title', title); // Set data-title attribute with the movie title
    
        img.addEventListener('click', (event) => {
        event.preventDefault(); // Prevent the default behavior of the click event

        const movieId = img.getAttribute('data-id'); // Get the movie ID
        document.getElementById('movieSelect').value = movieId; // Update the input field with the movie ID
        console.log('Clicked image Id:', movieId);


        $('#movieSelect').trigger('change'); // Trigger the change event on #movieSelect
        });
      return img;
      
    }

    const getMovies = async () => {
        const response = await fetch('https://localhost:7290/admin/getmovies');
        const data = await response.json();
        data.forEach(movie => {
            const img = createImage(movie.image, movie.id); // Pass the movie title to createImage function
            const card = document.createElement('div');
            card.appendChild(img);

            mainContainer.appendChild(card);
        });
    }
    getMovies(); *@

@*
const mainContainer = document.querySelector('.slides');
const backBtn = document.getElementById('backBtn');
const nextBtn = document.getElementById('nextBtn');

let slideIndex = 0;

const createImage = (src, id) => {
    const img = document.createElement('img');
    img.src = src;
    img.setAttribute('data-id', id); // Set data-id attribute with the movie ID

     img.addEventListener('click', (event) => {
        event.preventDefault(); // Prevent the default behavior of the click event

        const movieId = img.getAttribute('data-id'); // Get the movie ID
        document.getElementById('movieSelect').value = movieId; // Update the input field with the movie ID
        console.log('Clicked image Id:', movieId);


        $('#movieSelect').trigger('change'); // Trigger the change event on #movieSelect
        });

    return img;
}

const getMovies = async () => {
    const response = await fetch('https://localhost:7290/admin/getmovies');
    const data = await response.json();
    data.forEach(movie => {
        const img = createImage(movie.image, movie.id);
        mainContainer.appendChild(img);
    });

    
}

getMovies();

const showSlide = () => {
    mainContainer.style.transform = `translateX(${-slideIndex * 1}px)`;
}

nextBtn.addEventListener('click', () => {
    slideIndex++;
    if (slideIndex >= mainContainer.children.length) {
        slideIndex = 0;
    }
    showSlide();
});

backBtn.addEventListener('click', () => {
    slideIndex--;
    if (slideIndex < 0) {
        slideIndex = mainContainer.children.length - 1;
    }
    showSlide();
});
 *@


const mainContainer = document.querySelector('.slides');
const backBtn = document.getElementById('backBtn');
const nextBtn = document.getElementById('nextBtn');

let slideIndex = 0;
const imagesPerSlide = 5; // Number of images to show per slide

const createImage = (src, id) => {
    const img = document.createElement('img');
    img.src = src;
    img.setAttribute('data-id', id); // Set data-id attribute with the movie ID

    img.addEventListener('click', (event) => {
        event.preventDefault(); // Prevent the default behavior of the click event

        const movieId = img.getAttribute('data-id'); // Get the movie ID
        document.getElementById('movieSelect').value = movieId; // Update the input field with the movie ID
        console.log('Clicked image Id:', movieId);

        $('#movieSelect').trigger('change'); // Trigger the change event on #movieSelect
    });

    return img;
}

const getMovies = async () => {
    const response = await fetch('https://localhost:7290/admin/getmovies');
    const data = await response.json();
    data.forEach(movie => {
        const img = createImage(movie.image, movie.id);
        mainContainer.appendChild(img);
    });

    showSlide(); // Show the initial slide
}

getMovies();

const showSlide = () => {
    const startIndex = slideIndex * imagesPerSlide;
    const endIndex = Math.min(startIndex + imagesPerSlide, mainContainer.children.length);
    
    for (let i = 0; i < mainContainer.children.length; i++) {
        if (i >= startIndex && i < endIndex) {
            mainContainer.children[i].style.display = 'inline-block';
        } else {
            mainContainer.children[i].style.display = 'none';
        }
    }
}

nextBtn.addEventListener('click', () => {
    slideIndex++;
    if (slideIndex >= Math.ceil(mainContainer.children.length / imagesPerSlide)) {
        slideIndex = 0;
    }
    showSlide();
});

backBtn.addEventListener('click', () => {
    slideIndex--;
    if (slideIndex < 0) {
        slideIndex = Math.ceil(mainContainer.children.length / imagesPerSlide) - 1;
    }
    showSlide();
});


    //Select date 

    const createDateElement = (date) => {
    const dateElement = document.createElement('div');
    dateElement.classList.add('date');
    const dayOfWeek = document.createElement('span');
    dayOfWeek.textContent = date.dayOfWeek;
    const dateChild = document.createElement('span');
    dateChild.textContent = date.date;
    dateElement.appendChild(dayOfWeek);
    dateElement.appendChild(dateChild);

    // Add event listener to load data when date is clicked
    dateElement.addEventListener('click', () => {
        // Clear existing selections
        document.querySelectorAll('.date').forEach((el) => {
            el.classList.remove('active');
        });
        dateElement.classList.add('active'); // Set the clicked date as active

        // Call function to load data for Country, Canton, and Showtime based on the selected date
        loadCountryCantonShowtimeData(date.date); // Pass the selected date to the function
    });

    if (currentDateSelected === null) {
        dateElement.classList.add('active');
        currentDateSelected = dateElement;
    }
    dateContainer.appendChild(dateElement);
};


    $(document).ready(function() {
            const dateContainer = $('#dateContainer');
            const today = new Date();
            for (let i = 0; i < 21; i++) {
                const date = new Date(today);
                date.setDate(date.getDate() + i);
                const options = { weekday: 'short', year: 'numeric', month: 'long', day: 'numeric' };
                const formattedDate = date.toLocaleDateString('en-GB', options);
                const dateParts = formattedDate.split(' ');
                let tmpDayOfWeek = dateParts[0].slice(0, 3);
                let tmpDate = `${dateParts[1]} ${dateParts[2]} ${dateParts[3]}`;
                const dateElement = `<div class="date">${tmpDayOfWeek} ${tmpDate}</div>`;
                dateContainer.append(dateElement);
            }
        });






    </script>
}